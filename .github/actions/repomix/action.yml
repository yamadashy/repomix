name: "Repomix Action"
description: "Pack repository contents into a single file that is easy for LLMs to process"
author: "Kazuki Yamada <koukun0120@gmail.com>"
branding:
  icon: archive
  color: purple

inputs:
  directories:
    description: "Space-separated list of directories to process (defaults to '.')"
    required: false
    default: "."
  include:
    description: "Comma-separated glob patterns to include"
    required: false
    default: ""
  ignore:
    description: "Comma-separated glob patterns to ignore"
    required: false
    default: ""
  output:
    description: "Relative path to write packed file"
    required: false
    default: "repomix.txt"
  compress:
    description: "Set to 'false' to disable smart compression"
    required: false
    default: "true"
  additional-args:
    description: "Any extra raw arguments to pass directly to the repomix CLI"
    required: false
    default: ""
  repomix-version:
    description: "Version (or tag) of the npm package to install â€“ defaults to latest"
    required: false
    default: "latest"

runs:
  using: "composite"
  steps:
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: "22"
        cache: "npm"
    - name: Install Repomix
      shell: bash
      run: |
        npm install --global repomix@${{ inputs.repomix-version }}
    - name: Run Repomix
      id: build
      shell: bash
      run: |
        set -e
        CMD="repomix ${{ inputs.directories }}"
        if [ -n "${{ inputs.include }}" ]; then
          CMD="$CMD --include \"${{ inputs.include }}\""
        fi
        if [ -n "${{ inputs.ignore }}" ]; then
          CMD="$CMD --ignore \"${{ inputs.ignore }}\""
        fi
        if [ "${{ inputs.compress }}" = "false" ]; then
          CMD="$CMD --no-compress"
        else
          CMD="$CMD --compress"
        fi
        CMD="$CMD --output \"${{ inputs.output }}\" ${{ inputs.additional-args }}"
        echo "Running: $CMD"
        eval $CMD
        echo "output_file=${{ inputs.output }}" >> "$GITHUB_OUTPUT"

outputs:
  output_file:
    description: "Path to the file generated by Repomix"
    value: ${{ steps.build.outputs.output_file }}
